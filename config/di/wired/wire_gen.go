// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wired

import (
	"github.com/google/wire"

	"github.com/ReqqQ/SocialSphereAPI/src/infrastructure/bus"
	"github.com/ReqqQ/SocialSphereAPI/src/ui/command"
	"github.com/ReqqQ/SocialSphereAPI/src/ui/controllers"
)

// Injectors from DIContainer.go:

func InitDIContainer() (*AppService, error) {
	controllers := provideControllers()
	commands := provideCommands()
	queryHandler := provideQueryHandler()
	commandHandler := provideCommandHandler()
	appService := provideAppService(controllers, commands, queryHandler, commandHandler)
	return appService, nil
}

// DIContainer.go:

type AppServiceInterface interface {
	GetCommands() uicommand.CommandsInterface
	GetControllers() uicontrollers.ControllersInterface
	GetQueryHandlers() infrastructurebus.QueryHandlerInterface
	GetCommandHandlers() infrastructurebus.CommandHandlerInterface
}

type AppService struct {
	Controllers    uicontrollers.Controllers
	Commands       uicommand.Commands
	QueryHandler   infrastructurebus.QueryHandler
	CommandHandler infrastructurebus.CommandHandler
}

var (
	AppServiceSet = wire.NewSet(provideControllers, provideAppService, provideCommands, provideQueryHandler, provideCommandHandler)
)

func (a AppService) GetCommands() uicommand.CommandsInterface {
	return a.Commands
}

func (a AppService) GetQueryHandlers() infrastructurebus.QueryHandlerInterface {
	return a.QueryHandler
}

func (a AppService) GetCommandHandlers() infrastructurebus.CommandHandlerInterface {
	return a.CommandHandler
}

func (a AppService) GetControllers() uicontrollers.ControllersInterface {
	return a.Controllers
}

func provideControllers() uicontrollers.Controllers {
	return uicontrollers.Controllers{}
}

func provideCommands() uicommand.Commands {
	return uicommand.Commands{}
}

func provideQueryHandler() infrastructurebus.QueryHandler {
	return infrastructurebus.QueryHandler{}
}

func provideCommandHandler() infrastructurebus.CommandHandler {
	return infrastructurebus.CommandHandler{}
}

func provideAppService(controllers uicontrollers.Controllers, commands uicommand.Commands, queryHandler infrastructurebus.QueryHandler, commandHandler infrastructurebus.CommandHandler) *AppService {
	return &AppService{
		Controllers:    controllers,
		Commands:       commands,
		QueryHandler:   queryHandler,
		CommandHandler: commandHandler,
	}
}
